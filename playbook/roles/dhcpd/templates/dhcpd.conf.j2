ddns-update-style interim;

allow booting;
allow bootp;

ignore client-updates;
set vendorclass = option vendor-class-identifier;

option pxe-system-type code 93 = unsigned integer 16;

default-lease-time 604800;
max-lease-time 604800;

log-facility local7;

subnet {{ net.block }}0 netmask 255.255.255.0 {
	range {{ net.block }}.101 {{ net.block }}250;
	option broadcast-address {{ net.block }}255;
	option domain-name-servers {{ net.block }}1;
	default-lease-time 144000;
	max-lease-time 144000;
	option routers {{ net.block }}1;
	next-server {{ net.block }}1;
}

# one of many sections that needs a loop!
# which I didn't even realize was possible until recently!

host ${router1.hostname} {
	hardware ethernet {{ vmw.oui }}{{ router1.mac }};
	fixed-address {{ net.block }}{{ router1.ip }};
	filename "${router1.hostname}.conf";
}

host ${router2.hostname} {
	hardware ethernet {{ vmw.oui }}{{ router2.mac }};
	fixed-address {{ net.block }}{{ router2.ip }};
	filename "${router2.hostname}.conf";
}

host ${router3.hostname} {
	hardware ethernet {{ vmw.oui }}{{ router3.mac }};
	fixed-address {{ net.block }}{{ router3.ip }};
	filename "${router3.hostname}.conf";
}

host ${router4.hostname} {
	hardware ethernet {{ vmw.oui }}{{ router4.mac }};
	fixed-address {{ net.block }}{{ router4.ip }};
	filename "${router4.hostname}.conf";
}

host ${router5.hostname} {
	hardware ethernet {{ vmw.oui }}{{ router5.mac }};
	fixed-address {{ net.block }}{{ router5.ip }};
	filename "${router5.hostname}.conf";
}

host ${router6.hostname} {
	hardware ethernet {{ vmw.oui }}{{ router6.mac }};
	fixed-address {{ net.block }}{{ router6.ip }};
	filename "${router6.hostname}.conf";
}